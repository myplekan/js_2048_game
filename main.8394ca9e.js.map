{"version":3,"sources":["scripts/main.js"],"names":["cells","document","querySelectorAll","rows","start","querySelector","messages","scoreGame","grid","random","integer","Math","floor","randomCell","twoFour","x","y","createBoard","score","i","length","j","textContent","cheker","count","column","k","hidden","cell","className","classList","item","toggle","add","contains","moveHorizontal","key","filterRow","filterValue","move","filter","push","unshift","moveVertical","line","direction","reset","message","children","mess","remove","addEventListener","e","insertAdjacentHTML"],"mappings":"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","file":"main.8394ca9e.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst cells = document.querySelectorAll('.field-cell');\nconst rows = document.querySelectorAll('.field-row');\nconst start = document.querySelector('.start');\nconst messages = document.querySelector('.message-container');\nconst scoreGame = document.querySelector('.game-score');\nconst grid = [\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n];\n\nfunction random(integer) {\n  return Math.floor(Math.random() * integer);\n};\n\nfunction randomCell() {\n  const twoFour = random(10);\n  const x = random(4);\n  const y = random(4);\n\n  if (grid[x][y] === 0) {\n    (twoFour < 9)\n      ? grid[x][y] = 2\n      : grid[x][y] = 4;\n\n    return;\n  }\n  randomCell();\n}\n\nfunction createBoard() {\n  let score = 0;\n\n  for (let i = 0; i < grid.length; i++) {\n    for (let j = 0; j < grid.length; j++) {\n      rows[i].cells[j].textContent = grid[i][j];\n      score = score + grid[i][j];\n\n      if (rows[i].cells[j].textContent === '0') {\n        rows[i].cells[j].textContent = '';\n      }\n    }\n  }\n  scoreGame.textContent = score;\n\n  cheker();\n}\n\nfunction cheker() {\n  let count = 0;\n\n  for (let i = 0; i < grid.length; i++) {\n    for (let j = 0; j < grid.length - 1; j++) {\n      if (grid[i][j] === 0) {\n        count++;\n      }\n\n      if (grid[i][j] === grid[i][j + 1] && grid[i][j] > 0) {\n        count++;\n      }\n    }\n\n    const column = [\n      grid[0][i],\n      grid[1][i],\n      grid[2][i],\n      grid[3][i],\n    ];\n\n    for (let k = 0; k < column.length; k++) {\n      if (column[k] === 0) {\n        count++;\n      }\n\n      if (column[k] === column[k + 1]) {\n        count++;\n      }\n    }\n  }\n\n  if (count === 0) {\n    hidden('lose');\n  }\n\n  for (const cell of cells) {\n    const className = cell.classList.item(1);\n\n    if (className) {\n      cell.classList.toggle(className);\n    }\n\n    cell.classList.add(`field-cell--${cell.textContent}`);\n\n    if (cell.classList.contains('field-cell--2048')) {\n      hidden('win');\n    }\n  }\n}\n\nfunction moveHorizontal(key) {\n  for (let i = 0; i < grid.length; i++) {\n    const filterRow = grid[i].filter(item => item !== 0);\n    const filterValue = move(filterRow, key);\n\n    if (filterValue.length >= 1) {\n      if (key === 'ArrowLeft') {\n        while (filterValue.length < 4) {\n          filterValue.push(0);\n        }\n      }\n\n      if (key === 'ArrowRight') {\n        while (filterValue.length < 4) {\n          filterValue.unshift(0);\n        }\n      }\n\n      for (let j = 0; j < grid.length; j++) {\n        grid[i][j] = filterValue[j];\n      }\n    }\n  }\n  randomCell();\n  createBoard();\n}\n\nfunction moveVertical(key) {\n  for (let i = 0; i < grid.length; i++) {\n    const column = [\n      grid[0][i],\n      grid[1][i],\n      grid[2][i],\n      grid[3][i],\n    ];\n    const filterColumn = column.filter(item => item !== 0);\n    const filterValue = move(filterColumn, key);\n\n    if (key === 'ArrowUp') {\n      while (filterValue.length < 4) {\n        filterValue.push(0);\n      }\n    }\n\n    if (key === 'ArrowDown') {\n      while (filterValue.length < 4) {\n        filterValue.unshift(0);\n      }\n    }\n\n    grid[0][i] = filterValue[0];\n    grid[1][i] = filterValue[1];\n    grid[2][i] = filterValue[2];\n    grid[3][i] = filterValue[3];\n  }\n  randomCell();\n  createBoard();\n}\n\nfunction move(line, direction) {\n  if (direction === 'ArrowDown' || direction === 'ArrowRight') {\n    for (let i = line.length; i >= 0; i--) {\n      if (line[i] === line[i - 1]) {\n        line[i] += line[i - 1];\n        line[i - 1] = 0;\n      }\n    }\n  }\n\n  if (direction === 'ArrowUp' || direction === 'ArrowLeft') {\n    for (let i = 0; i < line.length; i++) {\n      if (line[i] === line[i + 1]) {\n        line[i] += line[i + 1];\n        line[i + 1] = 0;\n      }\n    }\n  }\n\n  return line.filter(item => item > 0);\n}\n\ndocument.addEventListener('keydown', e => {\n  if (start.classList.contains('start')) {\n    return;\n  }\n\n  switch (e.key) {\n    case 'ArrowUp':\n      moveVertical(e.key);\n      break;\n    case 'ArrowDown':\n      moveVertical(e.key);\n      break;\n    case 'ArrowRight':\n      moveHorizontal(e.key);\n      break;\n    case 'ArrowLeft':\n      moveHorizontal(e.key);\n      break;\n  }\n});\n\nfunction reset() {\n  for (let i = 0; i < grid.length; i++) {\n    for (let j = 0; j < grid.length; j++) {\n      grid[i][j] = 0;\n    }\n  }\n}\n\nmessages.insertAdjacentHTML('beforeend', `\n  <p class=\"message message-restart hidden\">\n    Press \"Restart\" to begin new game.\n  </p>\n`);\n\nstart.addEventListener('click', (e) => {\n  if (start.classList.contains('start')) {\n    start.classList.remove('start');\n    start.classList.add('restart');\n    start.textContent = 'restart';\n  }\n\n  hidden('restart');\n  reset();\n  randomCell();\n  randomCell();\n  createBoard();\n});\n\nfunction hidden(message) {\n  for (const mess of messages.children) {\n    (mess.classList.contains(`message-${message}`))\n      ? mess.classList.remove('hidden')\n      : mess.classList.add('hidden');\n  }\n}\n"]}